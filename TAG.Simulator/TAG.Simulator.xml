<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TAG.Simulator</name>
    </assembly>
    <members>
        <member name="T:TAG.Simulator.Events.KeyEventHandler">
            <summary>
            Delegate for key event handlers.
            </summary>
            <param name="Sender">Sender of event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:TAG.Simulator.Events.KeyEventArgs">
            <summary>
            Event arguments for key events.
            </summary>
        </member>
        <member name="M:TAG.Simulator.Events.KeyEventArgs.#ctor(System.String)">
            <summary>
            Event arguments for key events.
            </summary>
            <param name="Name">Key name.</param>
        </member>
        <member name="P:TAG.Simulator.Events.KeyEventArgs.Name">
            <summary>
            Key name
            </summary>
        </member>
        <member name="P:TAG.Simulator.Events.KeyEventArgs.Value">
            <summary>
            Key value
            </summary>
        </member>
        <member name="T:TAG.Simulator.Factory">
            <summary>
            Factory of simulation objects.
            </summary>
        </member>
        <member name="M:TAG.Simulator.Factory.Initialize">
            <summary>
            Initializes the factory
            </summary>
        </member>
        <member name="M:TAG.Simulator.Factory.TryGetSchemaResource(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Reflection.Assembly}@)">
            <summary>
            Tries to get the embedded resource name of the schema defining a namespace, and the corresponding assembly.
            </summary>
            <param name="Namespace">Namespace</param>
            <param name="Result">Embedded resource name and assembly.</param>
            <returns>If the namespace was found.</returns>
        </member>
        <member name="M:TAG.Simulator.Factory.Create(System.Xml.XmlElement,TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a simulation objected, based on its XML definition.
            </summary>
            <param name="Definition">XML definition.</param>
            <param name="Parent">Parent node.</param>
            <returns>Created simulation object</returns>
        </member>
        <member name="T:TAG.Simulator.ForEachCallbackMethod">
            <summary>
            Callback method for iteration across the simulation model.
            </summary>
            <param name="Node">Current node being processed.</param>
        </member>
        <member name="T:TAG.Simulator.ISimulationNode">
            <summary>
            Basic interface for simulator nodes. Implementing this interface allows classes with default contructors to be used
            in simulator models.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ISimulationNode.Namespace">
            <summary>
            XML Namespace where the element is defined.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ISimulationNode.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ISimulationNode.SchemaResource">
            <summary>
            Points to the embedded XML Schema resource defining the semantics of the XML namespace.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ISimulationNode.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node.</param>
            <returns>New instance</returns>
        </member>
        <member name="M:TAG.Simulator.ISimulationNode.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="M:TAG.Simulator.ISimulationNode.ForEach(TAG.Simulator.ForEachCallbackMethod,System.Boolean)">
            <summary>
            Evaluates <paramref name="Method"/> on each node in the subtree defined by the current node.
            </summary>
            <param name="Method">Method to call.</param>
            <param name="DepthFirst">If children are iterated before parents.</param>
        </member>
        <member name="M:TAG.Simulator.ISimulationNode.Initialize(TAG.Simulator.Model)">
            <summary>
            Initialized the node before simulation.
            </summary>
            <param name="Model">Model being executed.</param>
        </member>
        <member name="M:TAG.Simulator.ISimulationNode.Start">
            <summary>
            Starts the node.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ISimulationNode.Finalize">
            <summary>
            Finalizes the node after simulation.
            </summary>
        </member>
        <member name="T:TAG.Simulator.TimeBase">
            <summary>
            Base of simulation time
            </summary>
        </member>
        <member name="F:TAG.Simulator.TimeBase.StartOfSimulation">
            <summary>
            00:00:00 equals start of simulation.
            </summary>
        </member>
        <member name="F:TAG.Simulator.TimeBase.ComputerClock">
            <summary>
            Time/Date equals computer time/date.
            </summary>
        </member>
        <member name="T:TAG.Simulator.Model">
            <summary>
            Root node of a simulation model
            </summary>
        </member>
        <member name="M:TAG.Simulator.Model.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Root node of a simulation model
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="F:TAG.Simulator.Model.ComSimNamespace">
            <summary>
            http://trustanchorgroup.com/Schema/ComSim.xsd
            </summary>
        </member>
        <member name="P:TAG.Simulator.Model.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="P:TAG.Simulator.Model.TimeBase">
            <summary>
            Base of simulation time
            </summary>
        </member>
        <member name="P:TAG.Simulator.Model.SnifferFolder">
            <summary>
            Folder used for sniffer output.
            </summary>
        </member>
        <member name="P:TAG.Simulator.Model.SnifferTransformFileName">
            <summary>
            Sniffer XSLT file to use to transform sniffer output.
            </summary>
        </member>
        <member name="M:TAG.Simulator.Model.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node</param>
            <returns>New instance</returns>
        </member>
        <member name="M:TAG.Simulator.Model.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="M:TAG.Simulator.Model.Initialize(TAG.Simulator.Model)">
            <summary>
            Initialized the node before simulation.
            </summary>
            <param name="Model">Model being executed.</param>
        </member>
        <member name="M:TAG.Simulator.Model.Register(TAG.Simulator.ObjectModel.Distributions.Distribution)">
            <summary>
            Registers a distribution with the runtime environment of the model.
            </summary>
            <param name="Distribution">Distribution object.</param>
        </member>
        <member name="M:TAG.Simulator.Model.Register(TAG.Simulator.ObjectModel.Actors.Actor)">
            <summary>
            Registers a actor with the runtime environment of the model.
            </summary>
            <param name="Actor">Actor object.</param>
        </member>
        <member name="M:TAG.Simulator.Model.Run(System.Threading.Tasks.TaskCompletionSource{System.Boolean})">
            <summary>
            Runs the simulation.
            </summary>
            <param name="Done">Task completion source, that can be set by external events.</param>
            <returns>If simulation completed successfully.</returns>
        </member>
        <member name="M:TAG.Simulator.Model.GetRandomBytes(System.Int32)">
            <summary>
            Gets an array of random bytes.
            </summary>
            <param name="NrBytes">Number of random bytes to generate.</param>
            <returns>Random bytes.</returns>
        </member>
        <member name="M:TAG.Simulator.Model.GetKey(System.String)">
            <summary>
            Gets a key from the database. If it does not exist, it prompts the user for input.
            </summary>
            <param name="KeyName">Name of key.</param>
            <returns>Value of key.</returns>
        </member>
        <member name="E:TAG.Simulator.Model.OnGetKey">
            <summary>
            Event raised when the model needs a key from the system.
            </summary>
        </member>
        <member name="M:TAG.Simulator.Model.GetSniffer(System.String)">
            <summary>
            Gets a sniffer, if sniffer output is desired.
            </summary>
            <param name="Actor"></param>
            <returns>Sniffer, if any, null otherwise.</returns>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Activities.Activities">
            <summary>
            Container for activities.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Activities.Activities.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Container for activities.
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Activities.Activities.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Activities.Activities.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node</param>
            <returns>New instance</returns>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Actors.Actor">
            <summary>
            Abstract base class for actors
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Abstract base class for actors
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.#ctor(TAG.Simulator.ISimulationNode,System.Int32,System.String)">
            <summary>
            Abstract base class for actors
            </summary>
            <param name="Parent">Parent node</param>
            <param name="InstanceIndex">Instance index.</param>
            <param name="InstanceId">ID of instance</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Actors.Actor.Id">
            <summary>
            ID of actor.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Actors.Actor.InstanceId">
            <summary>
            ID of actor instance.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Actors.Actor.N">
            <summary>
            Number of actors of this type specified.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Actors.Actor.InstanceIndex">
            <summary>
            Actor instance index.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.Initialize(TAG.Simulator.Model)">
            <summary>
            Initialized the node before simulation.
            </summary>
            <param name="Model">Model being executed.</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.Start">
            <summary>
            Starts the node.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.Finalize">
            <summary>
            Finalizes the node after simulation.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.CreateInstance(System.Int32,System.String)">
            <summary>
            Creates an instance of the actor.
            </summary>
            <param name="InstanceIndex">Instance index.</param>
            <param name="InstanceId">ID of instance</param>
            <returns>Actor instance.</returns>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.InitializeInstance">
            <summary>
            Initializes an instance of an actor.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.StartInstance">
            <summary>
            Starts an instance of an actor.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actor.FinalizeInstance">
            <summary>
            Finalizes an instance of an actor.
            </summary>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Actors.Actors">
            <summary>
            Container for actors.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actors.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Container for actors.
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Actors.Actors.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Actors.Actors.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node</param>
            <returns>New instance</returns>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Distributions.Distribution">
            <summary>
            Abstract base class for distributions
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Distribution.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Abstract base class for distributions
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Distribution.Id">
            <summary>
            ID of distribution.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Distribution.N">
            <summary>
            Intensity/Frequency/Factor
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Distribution.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Distribution.Initialize(TAG.Simulator.Model)">
            <summary>
            Initialized the node before simulation.
            </summary>
            <param name="Model">Model being executed.</param>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Distributions.Distributions">
            <summary>
            Container for distributions.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Distributions.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Container for distributions.
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Distributions.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Distributions.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node</param>
            <returns>New instance</returns>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Distributions.Normal">
            <summary>
            Normal distribution
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Normal.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Normal distribution
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Normal.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Normal.Mean">
            <summary>
            μ
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Normal.StdDev">
            <summary>
            σ
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Normal.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node.</param>
            <returns>New instance</returns>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Normal.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Distributions.Uniform">
            <summary>
            Uniform distribution
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Uniform.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Uniform distribution
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Uniform.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Uniform.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Distributions.Uniform.To">
            <summary>
            To
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Uniform.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node.</param>
            <returns>New instance</returns>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Distributions.Uniform.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.SimulationNode">
            <summary>
            Abstract base class for simulation nodes
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNode.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Abstract base class for simulation nodes
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.SimulationNode.Parent">
            <summary>
            Parent node
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.SimulationNode.Namespace">
            <summary>
            XML Namespace where the element is defined.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.SimulationNode.SchemaResource">
            <summary>
            Points to the embedded XML Schema resource defining the semantics of the XML namespace.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.SimulationNode.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNode.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node.</param>
            <returns>New instance</returns>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNode.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNode.ForEach(TAG.Simulator.ForEachCallbackMethod,System.Boolean)">
            <summary>
            Evaluates <paramref name="Method"/> on each node in the subtree defined by the current node.
            </summary>
            <param name="Method">Method to call.</param>
            <param name="DepthFirst">If children are iterated before parents.</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNode.Initialize(TAG.Simulator.Model)">
            <summary>
            Initialized the node before simulation.
            </summary>
            <param name="Model">Model being executed.</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNode.Start">
            <summary>
            Starts the node.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNode.Finalize">
            <summary>
            Finalizes the node after simulation.
            </summary>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.SimulationNodeChildren">
            <summary>
            Abstract base class for simulation nodes with children
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNodeChildren.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Abstract base class for simulation nodes
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.SimulationNodeChildren.Children">
            <summary>
            Child nodes.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNodeChildren.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.SimulationNodeChildren.ForEach(TAG.Simulator.ForEachCallbackMethod,System.Boolean)">
            <summary>
            Evaluates <paramref name="Method"/> on each node in the subtree defined by the current node.
            </summary>
            <param name="Method">Method to call.</param>
            <param name="DepthFirst">If children are iterated before parents.</param>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Structure.Assemblies">
            <summary>
            Container for assemblies.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Structure.Assemblies.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Container for assemblies.
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Structure.Assemblies.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Structure.Assemblies.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node</param>
            <returns>New instance</returns>
        </member>
        <member name="T:TAG.Simulator.ObjectModel.Structure.Assembly">
            <summary>
            Assembly reference.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Structure.Assembly.#ctor(TAG.Simulator.ISimulationNode)">
            <summary>
            Assembly reference.
            </summary>
            <param name="Parent">Parent node</param>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Structure.Assembly.LocalName">
            <summary>
            Local name of XML element defining contents of class.
            </summary>
        </member>
        <member name="P:TAG.Simulator.ObjectModel.Structure.Assembly.FileName">
            <summary>
            Filename of assembly.
            </summary>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Structure.Assembly.Create(TAG.Simulator.ISimulationNode)">
            <summary>
            Creates a new instance of the node.
            </summary>
            <param name="Parent">Parent node</param>
            <returns>New instance</returns>
        </member>
        <member name="M:TAG.Simulator.ObjectModel.Structure.Assembly.FromXml(System.Xml.XmlElement)">
            <summary>
            Sets properties and attributes of class in accordance with XML definition.
            </summary>
            <param name="Definition">XML definition</param>
        </member>
    </members>
</doc>
